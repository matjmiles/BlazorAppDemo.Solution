@using BlazorAppDemo.Core.Interfaces;
@using BlazorAppDemo.Shared.Print3dModels;
@using Microsoft.AspNetCore.Components;
@using MudBlazor;

@inject IWebHostEnvironment env
@inject IJSRuntime JS

<MudDialog>
    <DialogContent>
        <MudTextField T="string" Label="Name" @bind-Value="fileUploadModel.Name" />

        @if (ShowProgressBar == true)
        {
            <MudProgressCircular Color="MudBlazor.Color.Primary" Size="Size.Large" Indeterminate="true" />
            <MudPaper>Loading file...</MudPaper>
        }

        <MudTextField ReadOnly="true" Lines=1 T="string" Label="File Name:" @bind-Value="fileUploadModel.FilePath" Text="@FileSelectedMessage" />

        <MudPaper Class="d-flex align-content-start flex-wrap flex-grow-1 gap-4" Elevation="0">

            <MudFileUpload T="IBrowserFile" Accept=".stl, .obj, .3mf" OnFilesChanged="OnInputFileChange">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="MudBlazor.Color.Primary"
                               StartIcon="@Icons.Material.Filled.CloudUpload"
                               for="@context">
                        Upload File
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>


            @if (@fileUploadModel.FilePath is not null)
            {

                <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="MudBlazor.Color.Default"
                       StartIcon="@Icons.Material.Filled.CloudDownload"
                       OnClick="@(()=>DownloadFileFromURL(@fileUploadModel.FilePath))">
                    Download File
                </MudButton>

            }
        </MudPaper>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@if (!string.IsNullOrEmpty(SaveError))
{
    <MudAlert Severity="Severity.Error" Class="mt-2" ShowCloseIcon="true" CloseIconClicked="() => { SaveError = string.Empty; }">
        @SaveError
    </MudAlert>
}
